{
	"$schema": "vscode://schemas/color-theme",
	"name": "blackodin",
	"type": "dark",
	"colors": {
		"editor.background": "#000000",
		"editor.foreground": "#ffffff",
		"editor.inactiveSelectionBackground": "#ffffff80",
		"editor.lineHighlightBorder": "#333333",
		"editor.lineHighlightBackground": "#0e0e0e",
		"editor.selectionBackground": "#666666", // selection color when you click and drag to select
		"editor.wordHighlightBackground": "#ffffff40", // word highlight color
		"editorIndentGuide.background1": "#333333",
		"editorIndentGuide.activeBackground1": "#333333",
		"editorLineNumber.activeForeground": "#ffffff",
		"editorLineNumber.foreground": "#555555",
		"selection.background": "#333333",
		"sideBarTitle.foreground": "#ffffff",
		"statusBarItem.remoteBackground": "#00000000",
		"ports.iconRunningProcessForeground": "#00ff00",
		"editorWhitespace.foreground": "#222222",
		"actionBar.toggledBackground": "#222222",
		"activityBar.background": "#111111",
		"debugToolBar.background": "#111111",
		"dropdown.listBackground": "#111111",
		"editorGroupHeader.tabsBackground": "#111111",
		"editorWidget.background": "#111111",
		"menu.background": "#111111",
		"notificationCenterHeader.background": "#111111",
		"notifications.background": "#111111",
		"peekViewEditor.background": "#111111",
		"sideBar.background": "#111111",
		"sideBarSectionHeader.background": "#111111",
		"statusBar.background": "#111111",
		"statusBar.debuggingBackground": "#004080",
		"statusBar.noFolderBackground": "#111111",
		"tab.activeBackground": "#002040",
		"tab.activeBorder": "#ffffff",
		"tab.inactiveBackground": "#111111",
		"titleBar.activeBackground": "#111111",
		"activityBarBadge.background": "#007acc",
		"input.background": "#000000", //co-pilot chat window
	},
	"tokenColors": [
		{
			"name": "entity.name.function.decorator", // (gdscript) @export
			"scope": [
				"entity.name.function.decorator"
			],
			"settings": {
				"foreground": "#ffaa77",
				"fontStyle": "" 
			}
		},
		{
			"name": "Function declarations", // my_proc
			"scope": [
				"entity.name.function",
				"support.function",
				"support.constant.handlebars",
				"source.powershell variable.other.member",
				"entity.name.operator.custom-literal"
			],
			"settings": {
				"foreground": "#33bbff",//changing from yellow #ffff88 to gdscript light blue. old lt blue was variable_name
				"fontStyle": "" 
			}
		},
		{
			"name": "Types declaration and references", // struct, union, enum, distinct, ->
			"scope": [
				"keyword.language", //(gdscript) class_name, extend, -> void
				"storage.type.var",//gdscript "var"
				"storage.type.is",//(gdscript) "is"
				"storage.type",
				"storage.type.function.arrow",
				"storage.modifier", // (js) static
				"punctuation.definition.bracket.square",
				"meta.type.cast.expr", // (ts)
				"meta.type.new.expr", // (ts)
				"support.constant.math", // (ts)
				"support.constant.dom", // (ts)
				"support.constant.json", // (ts)
				"entity.other.inherited-class", // (ts)
				"punctuation.separator.namespace.ruby", // (ts)
				"support.constant.property-value", // (css)
				"support.constant.font-name",
				"support.constant.media-type",
				"support.constant.media",
				"constant.other.color.rgb-value",
				"constant.other.rgb-value",
				"support.constant.color",
				"entity.other", //HTML
			],
			"settings": {
				"foreground": "#ff7788", //changing to match gdscript light red. previously purlple "#6666ff"
				"fontStyle": ""
			}
		},
		{
			"name": "Comment", // //
			"scope": [
				"comment",
				"string.comment"
			],
			"settings": {
				"foreground": "#888888"
			}
		},
		{
			"name": "String", // "abc"
			"scope": [
				"string"
			],
			"settings": {
				"foreground": "#ffeeaa" //changing from visual studio orange #ffaa88 to gdscript pale yellow
			}
		},
		{
			"name": "Literal Number", // 20
			"scope": "constant.numeric",
			"settings": {
				"foreground": "#99FFEE" //change from green-yellow to gdscript blue-green
			}
		},
		{
			"name": "constant.language", // null, true, false
			"scope": "constant.language",
			"settings": {
				"foreground": "#ff7788" //changing from 5599ff to gdscript red
			}
		},
		{
			"name": "Constant",
			"scope": "constant",
			"settings": {
				"foreground": "#ff7788" //changing from 5599ff to gdscript red
			}
		},
		{
			"name": "Embedded String Begin/End", // my_func() - parathesis
			"scope": [
				"string.embedded.begin",
				"string.embedded.end",
				"punctuation.definition.template-expression",
				"punctuation.section.embedded",
			],
			"settings": {
				"foreground": "#ffff88",
			}
		},
		{
			"name": "Punctuation", // period. between fields
			"scope": [
				"punctuation.separator",
				"punctuation.accessor",
				"meta.brace",
				"punctuation.definition.typeparameters",// type definition ( para
				"punctuation.definition.parameters"// proc call ( para
			],
			"settings": {
				"foreground": "#aaaaaa",
			}
		},
		{
			"name": "obj block definition.block", // obj definition { curly
			"scope": [
				"punctuation.definition.block",
				"punctuation.definition.bracket.curly", // (js) {}
				"keyword.operator", // ::, ^, &, :=, =, :
			],
			"settings": {
				"foreground": "#ccccff",//changing from gray #aaaaaa
				"fontStyle": ""
			}
		},
		{
			"name": "Control flow / Special keywords",
			"scope": [
				"keyword.control", // package if|else|or_else|when|where|for|in|not_in|defer|switch|return|or_return break|or_break|continue|or_continue fallthrough|case|dynamic do|force_inline|no_inline asm
				"keyword.control.import", // import, foreign
				"keyword.control.attribute", // @attribute
				"keyword.control.case", // case
				"keyword.other", // proc
				"keyword.function", // cast,transmute
				"source.cpp keyword.operator.new",
				"keyword.operator.new",
				"keyword.operator.delete",
				"keyword.other.using",
				"keyword.other.directive.using",
				"keyword.other.operator",
				"entity.name.operator",
				"entity.name.tag", // odin #partial switch case
			],
			"settings": {
				"foreground": "#ffaa77" // making orange like gdscipt. previously #dd77ff or paler #eeaaff
			}
		},
		{
			"name": "variable.parameter.function", // my_func(param1)
			"scope": [
				"variable.parameter"
			],
			"settings": {
				"foreground": "#dddddd",
				"fontStyle": ""
			}
		},
		{
			"name": "Variable property", // my_var.prop
			"scope": [
				// "variable.name",
				"variable.object.property",
				// "variable.parameter", // (js) function parameters
				"meta.object-literal.key"
			],
			"settings": {
				"foreground": "#66ddff",
				"fontStyle": ""
			}
		},
		{
			"name": "Constants and enums", // CONST, Type
			"scope": [
				"variable.name",
				"variable.other.object",
				"variable.other.enummember",
				"variable.other.constant",
				"variable.other.global",
				"variable.other.readwrite.class",
				"variable.other.readwrite.instance",
				"variable.other.readwrite.batchfile",
				"variable.readwrite",
				"variable.readwrite.other.block",
				"variable.other", // (js) global variables also gdscript variables
			],
			"settings": {
				"foreground": "#ffffff",//change closer to gdscript white/pure white. may revert later. previously light blue #22aaff
				"fontStyle": ""
			}
		},
		{
			"name": "Class", // My_Class, Package_Name, Namespace
			"scope": [
				"support.class",
				"entity.name.type.class", //gdscript - class or primitive type
				"entity.name.type",
				"entity.name.class",
				"entity.name.type.module", // odin
				"entity.name.namespace", // odin
				"entity.name.module", // odin
				"storage.identifier", // odin
				// "entity.name", // HTML
			],
			"settings": {
				"foreground": "#44ffaa",
				"fontStyle": "underline",
			}
		},
		{
			"name": "Library class/type", // int, bool //similar to "class", but primitive
			"scope": [
				"support.type",
				"support.variable",
				"keyword.type"
			],
			"settings": {
				"foreground": "#44ffaa", //changing color to match class. no underline.
				"fontStyle": ""
			}
		},
		{
			"name": "variable",
			"scope": [
				"variable", // (python) variable name
				"meta.definition.variable.name",
				"meta.object-literal.key", //(ts)
				"entity.name.variable",
			],
			"settings": {
				"foreground": "#ffffff",//changed from 66ddff
				"fontStyle": ""
			}
		},
		{
			"name": "variable.other.property",
			"scope": [
				"variable.other.property" // (gdscript) variable.some_property
			],
			"settings": {
				"foreground": "#CCAAFF",
				"fontStyle": ""
			}
		},
	],
	"semanticHighlighting": true,
	"semanticTokenColors": {
		"newOperator": "#ff99ff",
		"stringLiteral": "#ffaa77",
		"customLiteral": "#ffff88",
		"numberLiteral": "#ddffaa"
	}
}